#!/usr/bin/python3
""" a module that defines Base for all classes  of Airbnb """


import uuid
from datetime import datetime
import models


class BaseModel:
    """ a superclass that defines Base for all classes  of Airbnb """
    def __init__(self, *args, **kwargs):
        """Initializing the BaseModel class
        Args:
            args: take unlimited arguement
            kwargs: take unlimited params as argument
        """
        if kwargs:
            for key, value in kwargs.items():
                if key == "__class__":
                    continue
                elif key in ["created_at", "updated_at"]:
                    setattr(self, key, datetime.strptime(value,'%Y-%m-%dT%H:%M:%S.%f'))
                else:
                    setattr(self, key, value)
        else:
            self.id = str(uuid.uuid4())
            self.created_at = datetime.now()
            self.updated_at = datetime.now()
            models.storage.new(self)

    def __str__(self):
        """
        return the string representation
        """

        return ("[{}] ({}) {}".format(self.__class__.__name__, self.id, self.__dict__))

    def to_dict(self):
        """
        return dict representation
        """

        obj_dict = {}

        for key, value in self.__dict__.items():
            obj_dict[key] = value

        obj_dict['__class__'] = self.__class__.__name__
        obj_dict['created_at'] = self.created_at.isoformat()
        obj_dict['updated_at'] = self.updated_at.isoformat()

        return obj_dict

    def save(self):
        """
        save to a file
        """
        models.storage.save()
        self.updated_at = datetime.now()
